--------------------------------------------------------
--  File created - Sunday-December-09-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for View CUSTOMER_ADDRESS
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "CUSTOMER_ADDRESS" ("CUSTOMERID", "ADDRESS") AS 
  SELECT CustomerID, Address FROM customer;
--------------------------------------------------------
--  DDL for Table BILLINGACCOUNT
--------------------------------------------------------

  CREATE TABLE "BILLINGACCOUNT" 
   (	"ACCOUNTID" NUMBER(4,0), 
	"CUSTOMERID" NUMBER(4,0), 
	"CREDITCARDID" NUMBER(4,0), 
	"BILLINGADDRESS" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CREDITCARD
--------------------------------------------------------

  CREATE TABLE "CREDITCARD" 
   (	"CREDITCARDID" NUMBER(4,0), 
	"CCNUMBER" NUMBER(16,0), 
	"HOLDERNAME" VARCHAR2(60 BYTE), 
	"EXPIRYDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "CUSTOMER" 
   (	"CUSTOMERID" NUMBER(4,0), 
	"FIRSTNAME" VARCHAR2(30 BYTE), 
	"LASTNAME" VARCHAR2(30 BYTE), 
	"PHONE" VARCHAR2(12 BYTE), 
	"EMAIL" VARCHAR2(30 BYTE), 
	"ADDRESS" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPARTMENT
--------------------------------------------------------

  CREATE TABLE "DEPARTMENT" 
   (	"DEPARTMENTID" NUMBER(4,0), 
	"DEPARTMENTNAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORDERITEM
--------------------------------------------------------

  CREATE TABLE "ORDERITEM" 
   (	"ORDERITEMID" NUMBER(4,0), 
	"PRODUCTID" NUMBER(4,0), 
	"ORDERID" NUMBER(4,0), 
	"QUANTITY" NUMBER(2,0), 
	"ITEMPRICE" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PAYMENT
--------------------------------------------------------

  CREATE TABLE "PAYMENT" 
   (	"PAYMENTID" NUMBER(4,0), 
	"ACCOUNTID" NUMBER(4,0), 
	"CREDITCARDID" NUMBER(4,0), 
	"PAID" CHAR(1 BYTE) DEFAULT 'N', 
	"TOTAL" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PRODUCT
--------------------------------------------------------

  CREATE TABLE "PRODUCT" 
   (	"PRODUCTID" NUMBER(4,0), 
	"DEPARTMENTID" NUMBER(4,0), 
	"PRODUCTNAME" VARCHAR2(25 BYTE), 
	"PRODUCTDESCRIPTION" VARCHAR2(50 BYTE), 
	"PRODUCTSIZE" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SHOPPINGCART
--------------------------------------------------------

  CREATE TABLE "SHOPPINGCART" 
   (	"CARTID" NUMBER(4,0), 
	"USERID" NUMBER(4,0), 
	"ORDERITEMID" NUMBER(4,0), 
	"EXPIRED" CHAR(1 BYTE) DEFAULT 'N', 
	"CREATED" DATE, 
	"QUANTITY" NUMBER(2,0), 
	"ITEMPRICE" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SHOPPINGORDER
--------------------------------------------------------

  CREATE TABLE "SHOPPINGORDER" 
   (	"ORDERID" NUMBER(4,0), 
	"ACCOUNTID" NUMBER(4,0), 
	"ORDERDATE" DATE, 
	"ORDERSHIPPED" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USERACCOUNT
--------------------------------------------------------

  CREATE TABLE "USERACCOUNT" 
   (	"USERID" NUMBER(4,0), 
	"CUSTOMERID" NUMBER(4,0), 
	"PASSWORD" VARCHAR2(20 BYTE), 
	"USERSTATUS" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Sequence BILLINGACCOUNT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "BILLINGACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence CUSTOMER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CUSTOMER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence DEPARTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "DEPARTMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
--------------------------------------------------------
--  DDL for Sequence USERACCOUNT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "USERACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
REM INSERTING into BILLINGACCOUNT
SET DEFINE OFF;
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (1,4,4,'773 RITSON AVE ONTARIO CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (2,2,2,'100 YOUNG ST MANITOBA CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (3,1,1,'123 INTERNET ST SASKATCHEWAN CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (4,3,3,'2 HIGHGATE RD ALBERTA CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (5,5,5,'99 HAVEN ST ONTARIO CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (6,7,7,'40 WESTERN RD PEI CANADA');
Insert into BILLINGACCOUNT (ACCOUNTID,CUSTOMERID,CREDITCARDID,BILLINGADDRESS) values (7,6,6,'34 SIDE ST ONTARIO CANADA');
REM INSERTING into CREDITCARD
SET DEFINE OFF;
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (1,547325238,'SUSAN SMITH',to_date('08-MAR-2020','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (2,92749683,'JEFF BARBER',to_date('11-MAY-2022','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (3,49379234,'GARY POTTS',to_date('01-JAN-2021','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (4,19387463,'MARY MULBERRY',to_date('12-OCT-2022','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (5,92749683,'KAITLYN OLD',to_date('11-MAY-2022','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (6,12894732,'BOB JOHNSON',to_date('20-DEC-2020','DD-MON-RRRR'));
Insert into CREDITCARD (CREDITCARDID,CCNUMBER,HOLDERNAME,EXPIRYDATE) values (7,5937629304,'LARRY LAWSON',to_date('20-MAR-2020','DD-MON-RRRR'));
REM INSERTING into CUSTOMER
SET DEFINE OFF;
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (1,'SUSAN','SMITH','239-416-9055','ssmith@gmail.com','123 INTERNET ST SASKATCHEWAN CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (2,'JEFF','BARBER','289-556-0021','barberjeff@gmail.com','100 YOUNG ST MANITOBA CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (3,'GARY','POTTS','905-123-5643','catsarecool@gmail.com','2 HIGHGATE RD ALBERTA CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (4,'MARY','MULBERRY','905-577-4167','marymulberry@gmail.com','773 RITSON AVE ONTARIO CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (5,'KAITLYN','OLD','239-416-9055','ssmith@gmail.com','99 HAVEN ST ONTARIO CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (6,'BOB','JOHNSON','416-854-0098','johnsonbob@gmail.com','34 SIDE ST ONTARIO CANADA');
Insert into CUSTOMER (CUSTOMERID,FIRSTNAME,LASTNAME,PHONE,EMAIL,ADDRESS) values (7,'LARRY','LAWSON','416-721-9454','westernmovies@gmail.com','40 WESTERN RD PEI CANADA');
REM INSERTING into DEPARTMENT
SET DEFINE OFF;
Insert into DEPARTMENT (DEPARTMENTID,DEPARTMENTNAME) values (1,'Tops');
Insert into DEPARTMENT (DEPARTMENTID,DEPARTMENTNAME) values (2,'Outerwear');
Insert into DEPARTMENT (DEPARTMENTID,DEPARTMENTNAME) values (3,'Pants');
Insert into DEPARTMENT (DEPARTMENTID,DEPARTMENTNAME) values (4,'Formal Wear');
REM INSERTING into ORDERITEM
SET DEFINE OFF;
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (7,7,7,2,10.75);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (1,1,1,12,25.5);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (2,2,2,5,15);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (3,3,3,10,20.75);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (4,4,4,10,21.5);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (5,5,5,15,15.25);
Insert into ORDERITEM (ORDERITEMID,PRODUCTID,ORDERID,QUANTITY,ITEMPRICE) values (6,6,6,10,12.5);
REM INSERTING into PAYMENT
SET DEFINE OFF;
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (1,7,7,'N',100);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (2,6,6,'Y',15);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (3,1,4,'N',20.5);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (4,2,2,'N',12.5);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (5,3,1,'Y',60.75);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (6,4,3,'N',100);
Insert into PAYMENT (PAYMENTID,ACCOUNTID,CREDITCARDID,PAID,TOTAL) values (7,5,5,'N',32.25);
REM INSERTING into PRODUCT
SET DEFINE OFF;
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (1,1,'Graphic T-Shirt','T-Shirt with picture on front','S');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (2,2,'Michelin Man Jacket','Puffy jack with two pockets','L');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (3,3,'Blue Jeans','Straight cut jeans','M');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (4,4,'Sports Jacket','Fitted blue sports jacket','L');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (5,1,'Turtleneck Sweater','Maroon coloured sweater','M');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (6,4,'Dress Pants','Light grey dress pants, no pockets','S');
Insert into PRODUCT (PRODUCTID,DEPARTMENTID,PRODUCTNAME,PRODUCTDESCRIPTION,PRODUCTSIZE) values (7,1,'Tank Top','Loose pink coloured top','S');
REM INSERTING into SHOPPINGCART
SET DEFINE OFF;
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (1,7,1,'N',to_date('31-MAY-2013','DD-MON-RRRR'),12,25.5);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (2,6,2,'N',to_date('11-AUG-2018','DD-MON-RRRR'),5,15);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (3,5,3,'Y',to_date('01-MAY-2018','DD-MON-RRRR'),10,20.75);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (4,4,4,'N',to_date('20-JAN-2017','DD-MON-RRRR'),10,21.5);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (5,3,5,'N',to_date('30-MAR-2018','DD-MON-RRRR'),15,15.25);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (6,2,6,'N',to_date('05-FEB-2018','DD-MON-RRRR'),10,12.5);
Insert into SHOPPINGCART (CARTID,USERID,ORDERITEMID,EXPIRED,CREATED,QUANTITY,ITEMPRICE) values (7,1,7,'N',to_date('11-MAY-2014','DD-MON-RRRR'),2,10.75);
REM INSERTING into SHOPPINGORDER
SET DEFINE OFF;
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (1,1,to_date('15-JAN-2018','DD-MON-RRRR'),'N');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (2,2,to_date('25-MAR-2018','DD-MON-RRRR'),'Y');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (3,3,to_date('15-JAN-2018','DD-MON-RRRR'),'N');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (4,4,to_date('11-NOV-2018','DD-MON-RRRR'),'Y');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (5,5,to_date('08-SEP-2018','DD-MON-RRRR'),'N');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (6,6,to_date('31-OCT-2018','DD-MON-RRRR'),'N');
Insert into SHOPPINGORDER (ORDERID,ACCOUNTID,ORDERDATE,ORDERSHIPPED) values (7,7,to_date('15-JAN-2018','DD-MON-RRRR'),'N');
REM INSERTING into USERACCOUNT
SET DEFINE OFF;
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (1,1,'bananas','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (2,2,'password','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (3,3,'1234','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (4,4,'110593','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (5,5,'centennial','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (6,6,'01234','VALID');
Insert into USERACCOUNT (USERID,CUSTOMERID,PASSWORD,USERSTATUS) values (7,7,'mypassword','VALID');
--------------------------------------------------------
--  DDL for Index DEPARTMENT_DEPARTMENTID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEPARTMENT_DEPARTMENTID_PK" ON "DEPARTMENT" ("DEPARTMENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTPASSWORD
--------------------------------------------------------

  CREATE INDEX "CUSTPASSWORD" ON "USERACCOUNT" ("PASSWORD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index USERACCOUNT_USERID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "USERACCOUNT_USERID_PK" ON "USERACCOUNT" ("USERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRODUCT_PRODUCTID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRODUCT_PRODUCTID_PK" ON "PRODUCT" ("PRODUCTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SHOPPINGORDER_ORDERID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SHOPPINGORDER_ORDERID_PK" ON "SHOPPINGORDER" ("ORDERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BILLINGACCOUNT_ACCOUNTID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BILLINGACCOUNT_ACCOUNTID_PK" ON "BILLINGACCOUNT" ("ACCOUNTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CREDITCARD_CREDITCARDID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CREDITCARD_CREDITCARDID_PK" ON "CREDITCARD" ("CREDITCARDID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_CUSTOMERID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CUSTOMER_CUSTOMERID_PK" ON "CUSTOMER" ("CUSTOMERID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EMAIL
--------------------------------------------------------

  CREATE INDEX "EMAIL" ON "CUSTOMER" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTNAME
--------------------------------------------------------

  CREATE INDEX "CUSTNAME" ON "CUSTOMER" ("FIRSTNAME", "LASTNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRODUCT_PRODUCTNAME_UNIQUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRODUCT_PRODUCTNAME_UNIQUE" ON "PRODUCT" ("PRODUCTNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDERITEM_ORDERITEMID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORDERITEM_ORDERITEMID_PK" ON "ORDERITEM" ("ORDERITEMID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PAYMENT_PAYMENTID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PAYMENT_PAYMENTID_PK" ON "PAYMENT" ("PAYMENTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SHOPPINGCART_CARTID_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SHOPPINGCART_CARTID_PK" ON "SHOPPINGCART" ("CARTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger DISPLAY_ITEMPRICE_CHANGES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "DISPLAY_ITEMPRICE_CHANGES" 
before delete or insert or update on ORDERITEM
for each row
 WHEN (new.orderitemid > 0) declare
  itemprice_diff number;
  begin
  itemprice_diff := :new.itemprice  - :old.itemprice;
  dbms_output.put_line('Old Price: ' || :old.itemprice);
 dbms_output.put_line('New Price: ' || :new.itemprice);
 dbms_output.put_line('Price Difference Savings: ' || itemprice_diff);
 end;
/
ALTER TRIGGER "DISPLAY_ITEMPRICE_CHANGES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_QUANTITY_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "UPDATE_QUANTITY_TRG" 
AFTER UPDATE ON SHOPPINGCART 
for each row
   WHEN (new.cartid > 0) declare 
  qty_count NUMBER;
  
  begin
  select count(quantity) 
  into qty_count
  from SHOPPINGCART
  where cartid = :new.cartid;
  
  if(qty_count < 5)
  then
  dbms_output.put_line('Quantity Low, Restock');
  end if;
  END;
/
ALTER TRIGGER "UPDATE_QUANTITY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure PAYMENTPAID
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PAYMENTPAID" (
    p_paymentid IN NUMBER)
AS
  p_paid CHAR;
BEGIN
  SELECT paid INTO p_paid FROM payment WHERE p_paymentid = paymentid;
  IF p_paid = 'N' THEN
    DBMS_OUTPUT.PUT_LINE('Payment ID '||p_paymentid||' has not been paid ');
  ELSE
    DBMS_OUTPUT.PUT_LINE('Payment ID '||p_paymentid||' has been paid ');
  END IF;
END;

/
--------------------------------------------------------
--  DDL for Procedure PRODUCTTYPE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PRODUCTTYPE" (
    p_productid IN NUMBER)
AS
p_producttype varchar2(20);
BEGIN
  select departmentname
  into p_producttype
  from department, product
  where department.departmentid = product.departmentid and p_productid = productid;
  DBMS_OUTPUT.PUT_LINE('Product ID '||p_productid||' is '||p_producttype);
END;

/
--------------------------------------------------------
--  DDL for Function COUNTPRODUCT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "COUNTPRODUCT" (
p_departmentid in number)
return number
is p_countproduct number(4,0);
begin
select  count(productid)
into p_countproduct
from product
where DEPARTMENTID = p_departmentid;
return p_countproduct;
end;

/
--------------------------------------------------------
--  DDL for Function TOTALPRICE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "TOTALPRICE" (
    p_orderitemid IN NUMBER)
return number
is
  p_totalprice NUMBER;
BEGIN
  SELECT quantity*itemprice
  into p_totalprice
  FROM orderitem
  WHERE orderitemid = p_orderitemid;
  return p_totalprice;
END totalPrice;

/
--------------------------------------------------------
--  Constraints for Table BILLINGACCOUNT
--------------------------------------------------------

  ALTER TABLE "BILLINGACCOUNT" ADD CONSTRAINT "BILLINGACCOUNT_ACCOUNTID_PK" PRIMARY KEY ("ACCOUNTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "CUSTOMER" ADD CONSTRAINT "CUSTOMER_CUSTOMERID_PK" PRIMARY KEY ("CUSTOMERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "CUSTOMER" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "CUSTOMER" MODIFY ("LASTNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEPARTMENT
--------------------------------------------------------

  ALTER TABLE "DEPARTMENT" ADD CONSTRAINT "DEPARTMENT_DEPARTMENTID_PK" PRIMARY KEY ("DEPARTMENTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDERITEM
--------------------------------------------------------

  ALTER TABLE "ORDERITEM" ADD CONSTRAINT "ORDERITEM_ORDERITEMID_PK" PRIMARY KEY ("ORDERITEMID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SHOPPINGCART
--------------------------------------------------------

  ALTER TABLE "SHOPPINGCART" ADD CONSTRAINT "SHOPPINGCART_CARTID_PK" PRIMARY KEY ("CARTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "SHOPPINGCART" ADD CONSTRAINT "SHOPPINGCART_EXPIRED_CK" CHECK (Expired IN ('Y','N')) ENABLE;
  ALTER TABLE "SHOPPINGCART" MODIFY ("EXPIRED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CREDITCARD
--------------------------------------------------------

  ALTER TABLE "CREDITCARD" ADD CONSTRAINT "CREDITCARD_CREDITCARDID_PK" PRIMARY KEY ("CREDITCARDID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PAYMENT
--------------------------------------------------------

  ALTER TABLE "PAYMENT" ADD CONSTRAINT "PAYMENT_PAID_CK" CHECK (Paid IN ('Y', 'N')) ENABLE;
  ALTER TABLE "PAYMENT" ADD CONSTRAINT "PAYMENT_PAYMENTID_PK" PRIMARY KEY ("PAYMENTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PAYMENT" MODIFY ("PAID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "PRODUCT" ADD CONSTRAINT "PRODUCT_PRODUCTID_PK" PRIMARY KEY ("PRODUCTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PRODUCT" ADD CONSTRAINT "PRODUCT_PRODUCTNAME_UNIQUE" UNIQUE ("PRODUCTNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USERACCOUNT
--------------------------------------------------------

  ALTER TABLE "USERACCOUNT" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "USERACCOUNT" ADD CONSTRAINT "USERACCOUNT_USERID_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SHOPPINGORDER
--------------------------------------------------------

  ALTER TABLE "SHOPPINGORDER" ADD CONSTRAINT "SHOPPINGORDER_ORDERID_PK" PRIMARY KEY ("ORDERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "SHOPPINGORDER" ADD CONSTRAINT "SHOPPINGORDER_ORDERSHIPPED_CK" CHECK (OrderShipped IN ('Y','N')) ENABLE;
  ALTER TABLE "SHOPPINGORDER" MODIFY ("ORDERSHIPPED" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table BILLINGACCOUNT
--------------------------------------------------------

  ALTER TABLE "BILLINGACCOUNT" ADD CONSTRAINT "BILLINGACCOUNT_CREDITCARDID_FK" FOREIGN KEY ("CREDITCARDID")
	  REFERENCES "CREDITCARD" ("CREDITCARDID") ENABLE;
  ALTER TABLE "BILLINGACCOUNT" ADD CONSTRAINT "BILLINGACCOUNT_CUSTOMERID_FK" FOREIGN KEY ("CUSTOMERID")
	  REFERENCES "CUSTOMER" ("CUSTOMERID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDERITEM
--------------------------------------------------------

  ALTER TABLE "ORDERITEM" ADD CONSTRAINT "ORDERITEM_ORDERID_FK" FOREIGN KEY ("ORDERID")
	  REFERENCES "SHOPPINGORDER" ("ORDERID") ENABLE;
  ALTER TABLE "ORDERITEM" ADD CONSTRAINT "ORDERITEM_PRODUCTID_FK" FOREIGN KEY ("PRODUCTID")
	  REFERENCES "PRODUCT" ("PRODUCTID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PAYMENT
--------------------------------------------------------

  ALTER TABLE "PAYMENT" ADD CONSTRAINT "PAYMENT_ACCOUNTID_FK" FOREIGN KEY ("ACCOUNTID")
	  REFERENCES "BILLINGACCOUNT" ("ACCOUNTID") ENABLE;
  ALTER TABLE "PAYMENT" ADD CONSTRAINT "PAYMENT_CREDITCARDID_FK" FOREIGN KEY ("CREDITCARDID")
	  REFERENCES "CREDITCARD" ("CREDITCARDID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "PRODUCT" ADD CONSTRAINT "PRODUCT_DEPARTMENTID" FOREIGN KEY ("DEPARTMENTID")
	  REFERENCES "DEPARTMENT" ("DEPARTMENTID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SHOPPINGCART
--------------------------------------------------------

  ALTER TABLE "SHOPPINGCART" ADD CONSTRAINT "SHOPPINGCART_ORDERITEMID_FK" FOREIGN KEY ("ORDERITEMID")
	  REFERENCES "ORDERITEM" ("ORDERITEMID") ENABLE;
  ALTER TABLE "SHOPPINGCART" ADD CONSTRAINT "SHOPPINGCART_USERID_FK" FOREIGN KEY ("USERID")
	  REFERENCES "USERACCOUNT" ("USERID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SHOPPINGORDER
--------------------------------------------------------

  ALTER TABLE "SHOPPINGORDER" ADD CONSTRAINT "SHOPPINGORDER_ACCOUNTID_FK" FOREIGN KEY ("ACCOUNTID")
	  REFERENCES "BILLINGACCOUNT" ("ACCOUNTID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USERACCOUNT
--------------------------------------------------------

  ALTER TABLE "USERACCOUNT" ADD CONSTRAINT "USERACCOUNT_CUSTOMERID_FK" FOREIGN KEY ("CUSTOMERID")
	  REFERENCES "CUSTOMER" ("CUSTOMERID") ENABLE;
